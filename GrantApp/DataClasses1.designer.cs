#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrantApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertapproach(approach instance);
    partial void Updateapproach(approach instance);
    partial void Deleteapproach(approach instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertattachment(attachment instance);
    partial void Updateattachment(attachment instance);
    partial void Deleteattachment(attachment instance);
    partial void Insertchangelog(changelog instance);
    partial void Updatechangelog(changelog instance);
    partial void Deletechangelog(changelog instance);
    partial void Insertcontact_history(contact_history instance);
    partial void Updatecontact_history(contact_history instance);
    partial void Deletecontact_history(contact_history instance);
    partial void Insertdocumentation_requirement(documentation_requirement instance);
    partial void Updatedocumentation_requirement(documentation_requirement instance);
    partial void Deletedocumentation_requirement(documentation_requirement instance);
    partial void Insertdocumentation_type(documentation_type instance);
    partial void Updatedocumentation_type(documentation_type instance);
    partial void Deletedocumentation_type(documentation_type instance);
    partial void Insertgrant(grant instance);
    partial void Updategrant(grant instance);
    partial void Deletegrant(grant instance);
    partial void Insertgrant_program(grant_program instance);
    partial void Updategrant_program(grant_program instance);
    partial void Deletegrant_program(grant_program instance);
    partial void Insertgrant_project(grant_project instance);
    partial void Updategrant_project(grant_project instance);
    partial void Deletegrant_project(grant_project instance);
    partial void Insertgrantor(grantor instance);
    partial void Updategrantor(grantor instance);
    partial void Deletegrantor(grantor instance);
    partial void Insertprogram(program instance);
    partial void Updateprogram(program instance);
    partial void Deleteprogram(program instance);
    partial void Insertproject(project instance);
    partial void Updateproject(project instance);
    partial void Deleteproject(project instance);
    partial void Insertstate(state instance);
    partial void Updatestate(state instance);
    partial void Deletestate(state instance);
    partial void Insertstatus_type(status_type instance);
    partial void Updatestatus_type(status_type instance);
    partial void Deletestatus_type(status_type instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::GrantApp.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<approach> approaches
		{
			get
			{
				return this.GetTable<approach>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<attachment> attachments
		{
			get
			{
				return this.GetTable<attachment>();
			}
		}
		
		public System.Data.Linq.Table<changelog> changelogs
		{
			get
			{
				return this.GetTable<changelog>();
			}
		}
		
		public System.Data.Linq.Table<contact_history> contact_histories
		{
			get
			{
				return this.GetTable<contact_history>();
			}
		}
		
		public System.Data.Linq.Table<documentation_requirement> documentation_requirements
		{
			get
			{
				return this.GetTable<documentation_requirement>();
			}
		}
		
		public System.Data.Linq.Table<documentation_type> documentation_types
		{
			get
			{
				return this.GetTable<documentation_type>();
			}
		}
		
		public System.Data.Linq.Table<grant> grants
		{
			get
			{
				return this.GetTable<grant>();
			}
		}
		
		public System.Data.Linq.Table<grant_program> grant_programs
		{
			get
			{
				return this.GetTable<grant_program>();
			}
		}
		
		public System.Data.Linq.Table<grant_project> grant_projects
		{
			get
			{
				return this.GetTable<grant_project>();
			}
		}
		
		public System.Data.Linq.Table<grantor> grantors
		{
			get
			{
				return this.GetTable<grantor>();
			}
		}
		
		public System.Data.Linq.Table<program> programs
		{
			get
			{
				return this.GetTable<program>();
			}
		}
		
		public System.Data.Linq.Table<project> projects
		{
			get
			{
				return this.GetTable<project>();
			}
		}
		
		public System.Data.Linq.Table<state> states
		{
			get
			{
				return this.GetTable<state>();
			}
		}
		
		public System.Data.Linq.Table<status_type> status_types
		{
			get
			{
				return this.GetTable<status_type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.approach")]
	public partial class approach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _approach_id;
		
		private string _approach_type;
		
		private EntitySet<contact_history> _contact_histories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onapproach_idChanging(int value);
    partial void Onapproach_idChanged();
    partial void Onapproach_typeChanging(string value);
    partial void Onapproach_typeChanged();
    #endregion
		
		public approach()
		{
			this._contact_histories = new EntitySet<contact_history>(new Action<contact_history>(this.attach_contact_histories), new Action<contact_history>(this.detach_contact_histories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approach_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int approach_id
		{
			get
			{
				return this._approach_id;
			}
			set
			{
				if ((this._approach_id != value))
				{
					this.Onapproach_idChanging(value);
					this.SendPropertyChanging();
					this._approach_id = value;
					this.SendPropertyChanged("approach_id");
					this.Onapproach_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approach_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string approach_type
		{
			get
			{
				return this._approach_type;
			}
			set
			{
				if ((this._approach_type != value))
				{
					this.Onapproach_typeChanging(value);
					this.SendPropertyChanging();
					this._approach_type = value;
					this.SendPropertyChanged("approach_type");
					this.Onapproach_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="approach_contact_history", Storage="_contact_histories", ThisKey="approach_id", OtherKey="initial_approach_id")]
		public EntitySet<contact_history> contact_histories
		{
			get
			{
				return this._contact_histories;
			}
			set
			{
				this._contact_histories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_histories(contact_history entity)
		{
			this.SendPropertyChanging();
			entity.approach = this;
		}
		
		private void detach_contact_histories(contact_history entity)
		{
			this.SendPropertyChanging();
			entity.approach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private bool _active;
		
		private string _display_name;
		
		private bool _admin;
		
		private EntitySet<contact_history> _contact_histories;
		
		private EntitySet<grant> _grants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Ondisplay_nameChanging(string value);
    partial void Ondisplay_nameChanged();
    partial void OnadminChanging(bool value);
    partial void OnadminChanged();
    #endregion
		
		public user()
		{
			this._contact_histories = new EntitySet<contact_history>(new Action<contact_history>(this.attach_contact_histories), new Action<contact_history>(this.detach_contact_histories));
			this._grants = new EntitySet<grant>(new Action<grant>(this.attach_grants), new Action<grant>(this.detach_grants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_name", DbType="NVarChar(50)")]
		public string display_name
		{
			get
			{
				return this._display_name;
			}
			set
			{
				if ((this._display_name != value))
				{
					this.Ondisplay_nameChanging(value);
					this.SendPropertyChanging();
					this._display_name = value;
					this.SendPropertyChanged("display_name");
					this.Ondisplay_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="Bit NOT NULL")]
		public bool admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_contact_history", Storage="_contact_histories", ThisKey="username", OtherKey="contacted_by")]
		public EntitySet<contact_history> contact_histories
		{
			get
			{
				return this._contact_histories;
			}
			set
			{
				this._contact_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_grant", Storage="_grants", ThisKey="username", OtherKey="grant_writer")]
		public EntitySet<grant> grants
		{
			get
			{
				return this._grants;
			}
			set
			{
				this._grants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_histories(contact_history entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_contact_histories(contact_history entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_grants(grant entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_grants(grant entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.attachment")]
	public partial class attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _attachment_id;
		
		private int _grant_id;
		
		private string _filename;
		
		private System.Data.Linq.Binary _data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onattachment_idChanging(int value);
    partial void Onattachment_idChanged();
    partial void Ongrant_idChanging(int value);
    partial void Ongrant_idChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OndataChanging(System.Data.Linq.Binary value);
    partial void OndataChanged();
    #endregion
		
		public attachment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int attachment_id
		{
			get
			{
				return this._attachment_id;
			}
			set
			{
				if ((this._attachment_id != value))
				{
					this.Onattachment_idChanging(value);
					this.SendPropertyChanging();
					this._attachment_id = value;
					this.SendPropertyChanged("attachment_id");
					this.Onattachment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_id", DbType="Int NOT NULL")]
		public int grant_id
		{
			get
			{
				return this._grant_id;
			}
			set
			{
				if ((this._grant_id != value))
				{
					this.Ongrant_idChanging(value);
					this.SendPropertyChanging();
					this._grant_id = value;
					this.SendPropertyChanged("grant_id");
					this.Ongrant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.changelog")]
	public partial class changelog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _date;
		
		private string _username;
		
		private string _object_edited;
		
		private string _details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onobject_editedChanging(string value);
    partial void Onobject_editedChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    #endregion
		
		public changelog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_edited", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string object_edited
		{
			get
			{
				return this._object_edited;
			}
			set
			{
				if ((this._object_edited != value))
				{
					this.Onobject_editedChanging(value);
					this.SendPropertyChanging();
					this._object_edited = value;
					this.SendPropertyChanged("object_edited");
					this.Onobject_editedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(MAX)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contact_history")]
	public partial class contact_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contact_history_id;
		
		private int _grant_id;
		
		private System.Nullable<int> _initial_approach_id;
		
		private string _contact_name;
		
		private System.DateTime _call_date;
		
		private string _outcome;
		
		private string _contacted_by;
		
		private string _notes;
		
		private EntityRef<approach> _approach;
		
		private EntityRef<user> _user;
		
		private EntityRef<grant> _grant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_history_idChanging(int value);
    partial void Oncontact_history_idChanged();
    partial void Ongrant_idChanging(int value);
    partial void Ongrant_idChanged();
    partial void Oninitial_approach_idChanging(System.Nullable<int> value);
    partial void Oninitial_approach_idChanged();
    partial void Oncontact_nameChanging(string value);
    partial void Oncontact_nameChanged();
    partial void Oncall_dateChanging(System.DateTime value);
    partial void Oncall_dateChanged();
    partial void OnoutcomeChanging(string value);
    partial void OnoutcomeChanged();
    partial void Oncontacted_byChanging(string value);
    partial void Oncontacted_byChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public contact_history()
		{
			this._approach = default(EntityRef<approach>);
			this._user = default(EntityRef<user>);
			this._grant = default(EntityRef<grant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_history_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contact_history_id
		{
			get
			{
				return this._contact_history_id;
			}
			set
			{
				if ((this._contact_history_id != value))
				{
					this.Oncontact_history_idChanging(value);
					this.SendPropertyChanging();
					this._contact_history_id = value;
					this.SendPropertyChanged("contact_history_id");
					this.Oncontact_history_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_id", DbType="Int NOT NULL")]
		public int grant_id
		{
			get
			{
				return this._grant_id;
			}
			set
			{
				if ((this._grant_id != value))
				{
					if (this._grant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongrant_idChanging(value);
					this.SendPropertyChanging();
					this._grant_id = value;
					this.SendPropertyChanged("grant_id");
					this.Ongrant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_initial_approach_id", DbType="Int")]
		public System.Nullable<int> initial_approach_id
		{
			get
			{
				return this._initial_approach_id;
			}
			set
			{
				if ((this._initial_approach_id != value))
				{
					if (this._approach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninitial_approach_idChanging(value);
					this.SendPropertyChanging();
					this._initial_approach_id = value;
					this.SendPropertyChanged("initial_approach_id");
					this.Oninitial_approach_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string contact_name
		{
			get
			{
				return this._contact_name;
			}
			set
			{
				if ((this._contact_name != value))
				{
					this.Oncontact_nameChanging(value);
					this.SendPropertyChanging();
					this._contact_name = value;
					this.SendPropertyChanged("contact_name");
					this.Oncontact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_call_date", DbType="DateTime NOT NULL")]
		public System.DateTime call_date
		{
			get
			{
				return this._call_date;
			}
			set
			{
				if ((this._call_date != value))
				{
					this.Oncall_dateChanging(value);
					this.SendPropertyChanging();
					this._call_date = value;
					this.SendPropertyChanged("call_date");
					this.Oncall_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outcome", DbType="NVarChar(MAX)")]
		public string outcome
		{
			get
			{
				return this._outcome;
			}
			set
			{
				if ((this._outcome != value))
				{
					this.OnoutcomeChanging(value);
					this.SendPropertyChanging();
					this._outcome = value;
					this.SendPropertyChanged("outcome");
					this.OnoutcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacted_by", DbType="NVarChar(50)")]
		public string contacted_by
		{
			get
			{
				return this._contacted_by;
			}
			set
			{
				if ((this._contacted_by != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontacted_byChanging(value);
					this.SendPropertyChanging();
					this._contacted_by = value;
					this.SendPropertyChanged("contacted_by");
					this.Oncontacted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="approach_contact_history", Storage="_approach", ThisKey="initial_approach_id", OtherKey="approach_id", IsForeignKey=true)]
		public approach approach
		{
			get
			{
				return this._approach.Entity;
			}
			set
			{
				approach previousValue = this._approach.Entity;
				if (((previousValue != value) 
							|| (this._approach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._approach.Entity = null;
						previousValue.contact_histories.Remove(this);
					}
					this._approach.Entity = value;
					if ((value != null))
					{
						value.contact_histories.Add(this);
						this._initial_approach_id = value.approach_id;
					}
					else
					{
						this._initial_approach_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("approach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_contact_history", Storage="_user", ThisKey="contacted_by", OtherKey="username", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.contact_histories.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.contact_histories.Add(this);
						this._contacted_by = value.username;
					}
					else
					{
						this._contacted_by = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_contact_history", Storage="_grant", ThisKey="grant_id", OtherKey="grant_id", IsForeignKey=true)]
		public grant grant
		{
			get
			{
				return this._grant.Entity;
			}
			set
			{
				grant previousValue = this._grant.Entity;
				if (((previousValue != value) 
							|| (this._grant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grant.Entity = null;
						previousValue.contact_histories.Remove(this);
					}
					this._grant.Entity = value;
					if ((value != null))
					{
						value.contact_histories.Add(this);
						this._grant_id = value.grant_id;
					}
					else
					{
						this._grant_id = default(int);
					}
					this.SendPropertyChanged("grant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentation_requirement")]
	public partial class documentation_requirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _grant_id;
		
		private int _documentation_type_id;
		
		private EntityRef<documentation_type> _documentation_type;
		
		private EntityRef<grant> _grant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongrant_idChanging(int value);
    partial void Ongrant_idChanged();
    partial void Ondocumentation_type_idChanging(int value);
    partial void Ondocumentation_type_idChanged();
    #endregion
		
		public documentation_requirement()
		{
			this._documentation_type = default(EntityRef<documentation_type>);
			this._grant = default(EntityRef<grant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int grant_id
		{
			get
			{
				return this._grant_id;
			}
			set
			{
				if ((this._grant_id != value))
				{
					if (this._grant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongrant_idChanging(value);
					this.SendPropertyChanging();
					this._grant_id = value;
					this.SendPropertyChanged("grant_id");
					this.Ongrant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentation_type_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int documentation_type_id
		{
			get
			{
				return this._documentation_type_id;
			}
			set
			{
				if ((this._documentation_type_id != value))
				{
					if (this._documentation_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondocumentation_type_idChanging(value);
					this.SendPropertyChanging();
					this._documentation_type_id = value;
					this.SendPropertyChanged("documentation_type_id");
					this.Ondocumentation_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="documentation_type_documentation_requirement", Storage="_documentation_type", ThisKey="documentation_type_id", OtherKey="documentation_type_id", IsForeignKey=true)]
		public documentation_type documentation_type
		{
			get
			{
				return this._documentation_type.Entity;
			}
			set
			{
				documentation_type previousValue = this._documentation_type.Entity;
				if (((previousValue != value) 
							|| (this._documentation_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._documentation_type.Entity = null;
						previousValue.documentation_requirements.Remove(this);
					}
					this._documentation_type.Entity = value;
					if ((value != null))
					{
						value.documentation_requirements.Add(this);
						this._documentation_type_id = value.documentation_type_id;
					}
					else
					{
						this._documentation_type_id = default(int);
					}
					this.SendPropertyChanged("documentation_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_documentation_requirement", Storage="_grant", ThisKey="grant_id", OtherKey="grant_id", IsForeignKey=true)]
		public grant grant
		{
			get
			{
				return this._grant.Entity;
			}
			set
			{
				grant previousValue = this._grant.Entity;
				if (((previousValue != value) 
							|| (this._grant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grant.Entity = null;
						previousValue.documentation_requirements.Remove(this);
					}
					this._grant.Entity = value;
					if ((value != null))
					{
						value.documentation_requirements.Add(this);
						this._grant_id = value.grant_id;
					}
					else
					{
						this._grant_id = default(int);
					}
					this.SendPropertyChanged("grant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentation_type")]
	public partial class documentation_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _documentation_type_id;
		
		private string _name;
		
		private EntitySet<documentation_requirement> _documentation_requirements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondocumentation_type_idChanging(int value);
    partial void Ondocumentation_type_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public documentation_type()
		{
			this._documentation_requirements = new EntitySet<documentation_requirement>(new Action<documentation_requirement>(this.attach_documentation_requirements), new Action<documentation_requirement>(this.detach_documentation_requirements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentation_type_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int documentation_type_id
		{
			get
			{
				return this._documentation_type_id;
			}
			set
			{
				if ((this._documentation_type_id != value))
				{
					this.Ondocumentation_type_idChanging(value);
					this.SendPropertyChanging();
					this._documentation_type_id = value;
					this.SendPropertyChanged("documentation_type_id");
					this.Ondocumentation_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="documentation_type_documentation_requirement", Storage="_documentation_requirements", ThisKey="documentation_type_id", OtherKey="documentation_type_id")]
		public EntitySet<documentation_requirement> documentation_requirements
		{
			get
			{
				return this._documentation_requirements;
			}
			set
			{
				this._documentation_requirements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_documentation_requirements(documentation_requirement entity)
		{
			this.SendPropertyChanging();
			entity.documentation_type = this;
		}
		
		private void detach_documentation_requirements(documentation_requirement entity)
		{
			this.SendPropertyChanging();
			entity.documentation_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[grant]")]
	public partial class grant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _grant_id;
		
		private int _grantor_id;
		
		private string _grant_name;
		
		private string _grant_description;
		
		private System.Nullable<System.DateTime> _submit_date;
		
		private System.Nullable<System.DateTime> _due_date;
		
		private System.Nullable<System.DateTime> _turnaround_time;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _payment_date;
		
		private decimal _grant_requested_amount;
		
		private System.Nullable<decimal> _grant_actual_amount;
		
		private int _status;
		
		private string _grantor_website;
		
		private string _grantor_username;
		
		private string _grantor_password;
		
		private string _submit_to_email;
		
		private string _submit_to_website;
		
		private string _program_emphasis;
		
		private string _grant_writer;
		
		private string _notes;
		
		private EntitySet<contact_history> _contact_histories;
		
		private EntitySet<documentation_requirement> _documentation_requirements;
		
		private EntitySet<grant_program> _grant_programs;
		
		private EntitySet<grant_project> _grant_projects;
		
		private EntityRef<user> _user;
		
		private EntityRef<grantor> _grantor;
		
		private EntityRef<status_type> _status_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongrant_idChanging(int value);
    partial void Ongrant_idChanged();
    partial void Ongrantor_idChanging(int value);
    partial void Ongrantor_idChanged();
    partial void Ongrant_nameChanging(string value);
    partial void Ongrant_nameChanged();
    partial void Ongrant_descriptionChanging(string value);
    partial void Ongrant_descriptionChanged();
    partial void Onsubmit_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onsubmit_dateChanged();
    partial void Ondue_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondue_dateChanged();
    partial void Onturnaround_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onturnaround_timeChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onpayment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpayment_dateChanged();
    partial void Ongrant_requested_amountChanging(decimal value);
    partial void Ongrant_requested_amountChanged();
    partial void Ongrant_actual_amountChanging(System.Nullable<decimal> value);
    partial void Ongrant_actual_amountChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Ongrantor_websiteChanging(string value);
    partial void Ongrantor_websiteChanged();
    partial void Ongrantor_usernameChanging(string value);
    partial void Ongrantor_usernameChanged();
    partial void Ongrantor_passwordChanging(string value);
    partial void Ongrantor_passwordChanged();
    partial void Onsubmit_to_emailChanging(string value);
    partial void Onsubmit_to_emailChanged();
    partial void Onsubmit_to_websiteChanging(string value);
    partial void Onsubmit_to_websiteChanged();
    partial void Onprogram_emphasisChanging(string value);
    partial void Onprogram_emphasisChanged();
    partial void Ongrant_writerChanging(string value);
    partial void Ongrant_writerChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public grant()
		{
			this._contact_histories = new EntitySet<contact_history>(new Action<contact_history>(this.attach_contact_histories), new Action<contact_history>(this.detach_contact_histories));
			this._documentation_requirements = new EntitySet<documentation_requirement>(new Action<documentation_requirement>(this.attach_documentation_requirements), new Action<documentation_requirement>(this.detach_documentation_requirements));
			this._grant_programs = new EntitySet<grant_program>(new Action<grant_program>(this.attach_grant_programs), new Action<grant_program>(this.detach_grant_programs));
			this._grant_projects = new EntitySet<grant_project>(new Action<grant_project>(this.attach_grant_projects), new Action<grant_project>(this.detach_grant_projects));
			this._user = default(EntityRef<user>);
			this._grantor = default(EntityRef<grantor>);
			this._status_type = default(EntityRef<status_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int grant_id
		{
			get
			{
				return this._grant_id;
			}
			set
			{
				if ((this._grant_id != value))
				{
					this.Ongrant_idChanging(value);
					this.SendPropertyChanging();
					this._grant_id = value;
					this.SendPropertyChanged("grant_id");
					this.Ongrant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grantor_id", DbType="Int NOT NULL")]
		public int grantor_id
		{
			get
			{
				return this._grantor_id;
			}
			set
			{
				if ((this._grantor_id != value))
				{
					if (this._grantor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongrantor_idChanging(value);
					this.SendPropertyChanging();
					this._grantor_id = value;
					this.SendPropertyChanged("grantor_id");
					this.Ongrantor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_name", DbType="NVarChar(50)")]
		public string grant_name
		{
			get
			{
				return this._grant_name;
			}
			set
			{
				if ((this._grant_name != value))
				{
					this.Ongrant_nameChanging(value);
					this.SendPropertyChanging();
					this._grant_name = value;
					this.SendPropertyChanged("grant_name");
					this.Ongrant_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_description", DbType="NVarChar(50)")]
		public string grant_description
		{
			get
			{
				return this._grant_description;
			}
			set
			{
				if ((this._grant_description != value))
				{
					this.Ongrant_descriptionChanging(value);
					this.SendPropertyChanging();
					this._grant_description = value;
					this.SendPropertyChanged("grant_description");
					this.Ongrant_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submit_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> submit_date
		{
			get
			{
				return this._submit_date;
			}
			set
			{
				if ((this._submit_date != value))
				{
					this.Onsubmit_dateChanging(value);
					this.SendPropertyChanging();
					this._submit_date = value;
					this.SendPropertyChanged("submit_date");
					this.Onsubmit_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					this.Ondue_dateChanging(value);
					this.SendPropertyChanging();
					this._due_date = value;
					this.SendPropertyChanged("due_date");
					this.Ondue_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_turnaround_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> turnaround_time
		{
			get
			{
				return this._turnaround_time;
			}
			set
			{
				if ((this._turnaround_time != value))
				{
					this.Onturnaround_timeChanging(value);
					this.SendPropertyChanging();
					this._turnaround_time = value;
					this.SendPropertyChanged("turnaround_time");
					this.Onturnaround_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_requested_amount", DbType="Money NOT NULL")]
		public decimal grant_requested_amount
		{
			get
			{
				return this._grant_requested_amount;
			}
			set
			{
				if ((this._grant_requested_amount != value))
				{
					this.Ongrant_requested_amountChanging(value);
					this.SendPropertyChanging();
					this._grant_requested_amount = value;
					this.SendPropertyChanged("grant_requested_amount");
					this.Ongrant_requested_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_actual_amount", DbType="Money")]
		public System.Nullable<decimal> grant_actual_amount
		{
			get
			{
				return this._grant_actual_amount;
			}
			set
			{
				if ((this._grant_actual_amount != value))
				{
					this.Ongrant_actual_amountChanging(value);
					this.SendPropertyChanging();
					this._grant_actual_amount = value;
					this.SendPropertyChanged("grant_actual_amount");
					this.Ongrant_actual_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._status_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grantor_website", DbType="NVarChar(MAX)")]
		public string grantor_website
		{
			get
			{
				return this._grantor_website;
			}
			set
			{
				if ((this._grantor_website != value))
				{
					this.Ongrantor_websiteChanging(value);
					this.SendPropertyChanging();
					this._grantor_website = value;
					this.SendPropertyChanged("grantor_website");
					this.Ongrantor_websiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grantor_username", DbType="NVarChar(50)")]
		public string grantor_username
		{
			get
			{
				return this._grantor_username;
			}
			set
			{
				if ((this._grantor_username != value))
				{
					this.Ongrantor_usernameChanging(value);
					this.SendPropertyChanging();
					this._grantor_username = value;
					this.SendPropertyChanged("grantor_username");
					this.Ongrantor_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grantor_password", DbType="NVarChar(50)")]
		public string grantor_password
		{
			get
			{
				return this._grantor_password;
			}
			set
			{
				if ((this._grantor_password != value))
				{
					this.Ongrantor_passwordChanging(value);
					this.SendPropertyChanging();
					this._grantor_password = value;
					this.SendPropertyChanged("grantor_password");
					this.Ongrantor_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submit_to_email", DbType="NVarChar(50)")]
		public string submit_to_email
		{
			get
			{
				return this._submit_to_email;
			}
			set
			{
				if ((this._submit_to_email != value))
				{
					this.Onsubmit_to_emailChanging(value);
					this.SendPropertyChanging();
					this._submit_to_email = value;
					this.SendPropertyChanged("submit_to_email");
					this.Onsubmit_to_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submit_to_website", DbType="NVarChar(200)")]
		public string submit_to_website
		{
			get
			{
				return this._submit_to_website;
			}
			set
			{
				if ((this._submit_to_website != value))
				{
					this.Onsubmit_to_websiteChanging(value);
					this.SendPropertyChanging();
					this._submit_to_website = value;
					this.SendPropertyChanged("submit_to_website");
					this.Onsubmit_to_websiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_emphasis", DbType="NVarChar(MAX)")]
		public string program_emphasis
		{
			get
			{
				return this._program_emphasis;
			}
			set
			{
				if ((this._program_emphasis != value))
				{
					this.Onprogram_emphasisChanging(value);
					this.SendPropertyChanging();
					this._program_emphasis = value;
					this.SendPropertyChanged("program_emphasis");
					this.Onprogram_emphasisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_writer", DbType="NVarChar(50)")]
		public string grant_writer
		{
			get
			{
				return this._grant_writer;
			}
			set
			{
				if ((this._grant_writer != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongrant_writerChanging(value);
					this.SendPropertyChanging();
					this._grant_writer = value;
					this.SendPropertyChanged("grant_writer");
					this.Ongrant_writerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_contact_history", Storage="_contact_histories", ThisKey="grant_id", OtherKey="grant_id")]
		public EntitySet<contact_history> contact_histories
		{
			get
			{
				return this._contact_histories;
			}
			set
			{
				this._contact_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_documentation_requirement", Storage="_documentation_requirements", ThisKey="grant_id", OtherKey="grant_id")]
		public EntitySet<documentation_requirement> documentation_requirements
		{
			get
			{
				return this._documentation_requirements;
			}
			set
			{
				this._documentation_requirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_grant_program", Storage="_grant_programs", ThisKey="grant_id", OtherKey="grant_id")]
		public EntitySet<grant_program> grant_programs
		{
			get
			{
				return this._grant_programs;
			}
			set
			{
				this._grant_programs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_grant_project", Storage="_grant_projects", ThisKey="grant_id", OtherKey="grant_id")]
		public EntitySet<grant_project> grant_projects
		{
			get
			{
				return this._grant_projects;
			}
			set
			{
				this._grant_projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_grant", Storage="_user", ThisKey="grant_writer", OtherKey="username", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.grants.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.grants.Add(this);
						this._grant_writer = value.username;
					}
					else
					{
						this._grant_writer = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grantor_grant", Storage="_grantor", ThisKey="grantor_id", OtherKey="grantor_id", IsForeignKey=true)]
		public grantor grantor
		{
			get
			{
				return this._grantor.Entity;
			}
			set
			{
				grantor previousValue = this._grantor.Entity;
				if (((previousValue != value) 
							|| (this._grantor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grantor.Entity = null;
						previousValue.grants.Remove(this);
					}
					this._grantor.Entity = value;
					if ((value != null))
					{
						value.grants.Add(this);
						this._grantor_id = value.grantor_id;
					}
					else
					{
						this._grantor_id = default(int);
					}
					this.SendPropertyChanged("grantor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_type_grant", Storage="_status_type", ThisKey="status", OtherKey="status_id", IsForeignKey=true)]
		public status_type status_type
		{
			get
			{
				return this._status_type.Entity;
			}
			set
			{
				status_type previousValue = this._status_type.Entity;
				if (((previousValue != value) 
							|| (this._status_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._status_type.Entity = null;
						previousValue.grants.Remove(this);
					}
					this._status_type.Entity = value;
					if ((value != null))
					{
						value.grants.Add(this);
						this._status = value.status_id;
					}
					else
					{
						this._status = default(int);
					}
					this.SendPropertyChanged("status_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_histories(contact_history entity)
		{
			this.SendPropertyChanging();
			entity.grant = this;
		}
		
		private void detach_contact_histories(contact_history entity)
		{
			this.SendPropertyChanging();
			entity.grant = null;
		}
		
		private void attach_documentation_requirements(documentation_requirement entity)
		{
			this.SendPropertyChanging();
			entity.grant = this;
		}
		
		private void detach_documentation_requirements(documentation_requirement entity)
		{
			this.SendPropertyChanging();
			entity.grant = null;
		}
		
		private void attach_grant_programs(grant_program entity)
		{
			this.SendPropertyChanging();
			entity.grant = this;
		}
		
		private void detach_grant_programs(grant_program entity)
		{
			this.SendPropertyChanging();
			entity.grant = null;
		}
		
		private void attach_grant_projects(grant_project entity)
		{
			this.SendPropertyChanging();
			entity.grant = this;
		}
		
		private void detach_grant_projects(grant_project entity)
		{
			this.SendPropertyChanging();
			entity.grant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grant_program")]
	public partial class grant_program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _grant_program_id;
		
		private int _grant_id;
		
		private int _program_id;
		
		private EntityRef<grant> _grant;
		
		private EntityRef<program> _program;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongrant_program_idChanging(int value);
    partial void Ongrant_program_idChanged();
    partial void Ongrant_idChanging(int value);
    partial void Ongrant_idChanged();
    partial void Onprogram_idChanging(int value);
    partial void Onprogram_idChanged();
    #endregion
		
		public grant_program()
		{
			this._grant = default(EntityRef<grant>);
			this._program = default(EntityRef<program>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_program_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int grant_program_id
		{
			get
			{
				return this._grant_program_id;
			}
			set
			{
				if ((this._grant_program_id != value))
				{
					this.Ongrant_program_idChanging(value);
					this.SendPropertyChanging();
					this._grant_program_id = value;
					this.SendPropertyChanged("grant_program_id");
					this.Ongrant_program_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_id", DbType="Int NOT NULL")]
		public int grant_id
		{
			get
			{
				return this._grant_id;
			}
			set
			{
				if ((this._grant_id != value))
				{
					if (this._grant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongrant_idChanging(value);
					this.SendPropertyChanging();
					this._grant_id = value;
					this.SendPropertyChanged("grant_id");
					this.Ongrant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_id", DbType="Int NOT NULL")]
		public int program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					if (this._program.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_grant_program", Storage="_grant", ThisKey="grant_id", OtherKey="grant_id", IsForeignKey=true)]
		public grant grant
		{
			get
			{
				return this._grant.Entity;
			}
			set
			{
				grant previousValue = this._grant.Entity;
				if (((previousValue != value) 
							|| (this._grant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grant.Entity = null;
						previousValue.grant_programs.Remove(this);
					}
					this._grant.Entity = value;
					if ((value != null))
					{
						value.grant_programs.Add(this);
						this._grant_id = value.grant_id;
					}
					else
					{
						this._grant_id = default(int);
					}
					this.SendPropertyChanged("grant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_grant_program", Storage="_program", ThisKey="program_id", OtherKey="program_id", IsForeignKey=true)]
		public program program
		{
			get
			{
				return this._program.Entity;
			}
			set
			{
				program previousValue = this._program.Entity;
				if (((previousValue != value) 
							|| (this._program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._program.Entity = null;
						previousValue.grant_programs.Remove(this);
					}
					this._program.Entity = value;
					if ((value != null))
					{
						value.grant_programs.Add(this);
						this._program_id = value.program_id;
					}
					else
					{
						this._program_id = default(int);
					}
					this.SendPropertyChanged("program");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grant_project")]
	public partial class grant_project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _grant_project_id;
		
		private int _grant_id;
		
		private int _project_id;
		
		private System.Nullable<decimal> _grant_project_amount;
		
		private EntityRef<grant> _grant;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongrant_project_idChanging(int value);
    partial void Ongrant_project_idChanged();
    partial void Ongrant_idChanging(int value);
    partial void Ongrant_idChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void Ongrant_project_amountChanging(System.Nullable<decimal> value);
    partial void Ongrant_project_amountChanged();
    #endregion
		
		public grant_project()
		{
			this._grant = default(EntityRef<grant>);
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_project_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int grant_project_id
		{
			get
			{
				return this._grant_project_id;
			}
			set
			{
				if ((this._grant_project_id != value))
				{
					this.Ongrant_project_idChanging(value);
					this.SendPropertyChanging();
					this._grant_project_id = value;
					this.SendPropertyChanged("grant_project_id");
					this.Ongrant_project_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_id", DbType="Int NOT NULL")]
		public int grant_id
		{
			get
			{
				return this._grant_id;
			}
			set
			{
				if ((this._grant_id != value))
				{
					if (this._grant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongrant_idChanging(value);
					this.SendPropertyChanging();
					this._grant_id = value;
					this.SendPropertyChanged("grant_id");
					this.Ongrant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grant_project_amount", DbType="Money")]
		public System.Nullable<decimal> grant_project_amount
		{
			get
			{
				return this._grant_project_amount;
			}
			set
			{
				if ((this._grant_project_amount != value))
				{
					this.Ongrant_project_amountChanging(value);
					this.SendPropertyChanging();
					this._grant_project_amount = value;
					this.SendPropertyChanged("grant_project_amount");
					this.Ongrant_project_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grant_grant_project", Storage="_grant", ThisKey="grant_id", OtherKey="grant_id", IsForeignKey=true)]
		public grant grant
		{
			get
			{
				return this._grant.Entity;
			}
			set
			{
				grant previousValue = this._grant.Entity;
				if (((previousValue != value) 
							|| (this._grant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grant.Entity = null;
						previousValue.grant_projects.Remove(this);
					}
					this._grant.Entity = value;
					if ((value != null))
					{
						value.grant_projects.Add(this);
						this._grant_id = value.grant_id;
					}
					else
					{
						this._grant_id = default(int);
					}
					this.SendPropertyChanged("grant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_grant_project", Storage="_project", ThisKey="project_id", OtherKey="project_id", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.grant_projects.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.grant_projects.Add(this);
						this._project_id = value.project_id;
					}
					else
					{
						this._project_id = default(int);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grantor")]
	public partial class grantor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _grantor_id;
		
		private string _organization_name;
		
		private string _contact_name;
		
		private string _contact_title;
		
		private string _address;
		
		private string _email;
		
		private string _phone;
		
		private string _fax;
		
		private string _city;
		
		private string _state_id;
		
		private string _zipcode;
		
		private string _types_of_support;
		
		private System.Nullable<decimal> _average_gift;
		
		private string _giving_history;
		
		private string _buzzwords;
		
		private string _notes;
		
		private EntitySet<grant> _grants;
		
		private EntityRef<state> _state;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongrantor_idChanging(int value);
    partial void Ongrantor_idChanged();
    partial void Onorganization_nameChanging(string value);
    partial void Onorganization_nameChanged();
    partial void Oncontact_nameChanging(string value);
    partial void Oncontact_nameChanged();
    partial void Oncontact_titleChanging(string value);
    partial void Oncontact_titleChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstate_idChanging(string value);
    partial void Onstate_idChanged();
    partial void OnzipcodeChanging(string value);
    partial void OnzipcodeChanged();
    partial void Ontypes_of_supportChanging(string value);
    partial void Ontypes_of_supportChanged();
    partial void Onaverage_giftChanging(System.Nullable<decimal> value);
    partial void Onaverage_giftChanged();
    partial void Ongiving_historyChanging(string value);
    partial void Ongiving_historyChanged();
    partial void OnbuzzwordsChanging(string value);
    partial void OnbuzzwordsChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public grantor()
		{
			this._grants = new EntitySet<grant>(new Action<grant>(this.attach_grants), new Action<grant>(this.detach_grants));
			this._state = default(EntityRef<state>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grantor_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int grantor_id
		{
			get
			{
				return this._grantor_id;
			}
			set
			{
				if ((this._grantor_id != value))
				{
					this.Ongrantor_idChanging(value);
					this.SendPropertyChanging();
					this._grantor_id = value;
					this.SendPropertyChanged("grantor_id");
					this.Ongrantor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string organization_name
		{
			get
			{
				return this._organization_name;
			}
			set
			{
				if ((this._organization_name != value))
				{
					this.Onorganization_nameChanging(value);
					this.SendPropertyChanging();
					this._organization_name = value;
					this.SendPropertyChanged("organization_name");
					this.Onorganization_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string contact_name
		{
			get
			{
				return this._contact_name;
			}
			set
			{
				if ((this._contact_name != value))
				{
					this.Oncontact_nameChanging(value);
					this.SendPropertyChanging();
					this._contact_name = value;
					this.SendPropertyChanged("contact_name");
					this.Oncontact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string contact_title
		{
			get
			{
				return this._contact_title;
			}
			set
			{
				if ((this._contact_title != value))
				{
					this.Oncontact_titleChanging(value);
					this.SendPropertyChanging();
					this._contact_title = value;
					this.SendPropertyChanged("contact_title");
					this.Oncontact_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					if (this._state.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zipcode", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string zipcode
		{
			get
			{
				return this._zipcode;
			}
			set
			{
				if ((this._zipcode != value))
				{
					this.OnzipcodeChanging(value);
					this.SendPropertyChanging();
					this._zipcode = value;
					this.SendPropertyChanged("zipcode");
					this.OnzipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_types_of_support", DbType="NVarChar(MAX)")]
		public string types_of_support
		{
			get
			{
				return this._types_of_support;
			}
			set
			{
				if ((this._types_of_support != value))
				{
					this.Ontypes_of_supportChanging(value);
					this.SendPropertyChanging();
					this._types_of_support = value;
					this.SendPropertyChanged("types_of_support");
					this.Ontypes_of_supportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_average_gift", DbType="Money")]
		public System.Nullable<decimal> average_gift
		{
			get
			{
				return this._average_gift;
			}
			set
			{
				if ((this._average_gift != value))
				{
					this.Onaverage_giftChanging(value);
					this.SendPropertyChanging();
					this._average_gift = value;
					this.SendPropertyChanged("average_gift");
					this.Onaverage_giftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giving_history", DbType="NVarChar(MAX)")]
		public string giving_history
		{
			get
			{
				return this._giving_history;
			}
			set
			{
				if ((this._giving_history != value))
				{
					this.Ongiving_historyChanging(value);
					this.SendPropertyChanging();
					this._giving_history = value;
					this.SendPropertyChanged("giving_history");
					this.Ongiving_historyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buzzwords", DbType="NVarChar(MAX)")]
		public string buzzwords
		{
			get
			{
				return this._buzzwords;
			}
			set
			{
				if ((this._buzzwords != value))
				{
					this.OnbuzzwordsChanging(value);
					this.SendPropertyChanging();
					this._buzzwords = value;
					this.SendPropertyChanged("buzzwords");
					this.OnbuzzwordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grantor_grant", Storage="_grants", ThisKey="grantor_id", OtherKey="grantor_id")]
		public EntitySet<grant> grants
		{
			get
			{
				return this._grants;
			}
			set
			{
				this._grants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_grantor", Storage="_state", ThisKey="state_id", OtherKey="state_id", IsForeignKey=true)]
		public state state
		{
			get
			{
				return this._state.Entity;
			}
			set
			{
				state previousValue = this._state.Entity;
				if (((previousValue != value) 
							|| (this._state.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._state.Entity = null;
						previousValue.grantors.Remove(this);
					}
					this._state.Entity = value;
					if ((value != null))
					{
						value.grantors.Add(this);
						this._state_id = value.state_id;
					}
					else
					{
						this._state_id = default(string);
					}
					this.SendPropertyChanged("state");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grants(grant entity)
		{
			this.SendPropertyChanging();
			entity.grantor = this;
		}
		
		private void detach_grants(grant entity)
		{
			this.SendPropertyChanging();
			entity.grantor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.program")]
	public partial class program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _program_id;
		
		private string _program_name;
		
		private string _program_description;
		
		private EntitySet<grant_program> _grant_programs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprogram_idChanging(int value);
    partial void Onprogram_idChanged();
    partial void Onprogram_nameChanging(string value);
    partial void Onprogram_nameChanged();
    partial void Onprogram_descriptionChanging(string value);
    partial void Onprogram_descriptionChanged();
    #endregion
		
		public program()
		{
			this._grant_programs = new EntitySet<grant_program>(new Action<grant_program>(this.attach_grant_programs), new Action<grant_program>(this.detach_grant_programs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string program_name
		{
			get
			{
				return this._program_name;
			}
			set
			{
				if ((this._program_name != value))
				{
					this.Onprogram_nameChanging(value);
					this.SendPropertyChanging();
					this._program_name = value;
					this.SendPropertyChanged("program_name");
					this.Onprogram_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_description", DbType="NVarChar(MAX)")]
		public string program_description
		{
			get
			{
				return this._program_description;
			}
			set
			{
				if ((this._program_description != value))
				{
					this.Onprogram_descriptionChanging(value);
					this.SendPropertyChanging();
					this._program_description = value;
					this.SendPropertyChanged("program_description");
					this.Onprogram_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_grant_program", Storage="_grant_programs", ThisKey="program_id", OtherKey="program_id")]
		public EntitySet<grant_program> grant_programs
		{
			get
			{
				return this._grant_programs;
			}
			set
			{
				this._grant_programs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grant_programs(grant_program entity)
		{
			this.SendPropertyChanging();
			entity.program = this;
		}
		
		private void detach_grant_programs(grant_program entity)
		{
			this.SendPropertyChanging();
			entity.program = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _project_id;
		
		private string _project_name;
		
		private string _project_overview;
		
		private string _project_need_statement;
		
		private string _project_objectives;
		
		private string _project_evaluation_plan;
		
		private string _organizational_budget;
		
		private string _project_timeline;
		
		private string _project_letters_support;
		
		private string _notes;
		
		private EntitySet<grant_project> _grant_projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void Onproject_nameChanging(string value);
    partial void Onproject_nameChanged();
    partial void Onproject_overviewChanging(string value);
    partial void Onproject_overviewChanged();
    partial void Onproject_need_statementChanging(string value);
    partial void Onproject_need_statementChanged();
    partial void Onproject_objectivesChanging(string value);
    partial void Onproject_objectivesChanged();
    partial void Onproject_evaluation_planChanging(string value);
    partial void Onproject_evaluation_planChanged();
    partial void Onorganizational_budgetChanging(string value);
    partial void Onorganizational_budgetChanged();
    partial void Onproject_timelineChanging(string value);
    partial void Onproject_timelineChanged();
    partial void Onproject_letters_supportChanging(string value);
    partial void Onproject_letters_supportChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public project()
		{
			this._grant_projects = new EntitySet<grant_project>(new Action<grant_project>(this.attach_grant_projects), new Action<grant_project>(this.detach_grant_projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string project_name
		{
			get
			{
				return this._project_name;
			}
			set
			{
				if ((this._project_name != value))
				{
					this.Onproject_nameChanging(value);
					this.SendPropertyChanging();
					this._project_name = value;
					this.SendPropertyChanged("project_name");
					this.Onproject_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_overview", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string project_overview
		{
			get
			{
				return this._project_overview;
			}
			set
			{
				if ((this._project_overview != value))
				{
					this.Onproject_overviewChanging(value);
					this.SendPropertyChanging();
					this._project_overview = value;
					this.SendPropertyChanged("project_overview");
					this.Onproject_overviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_need_statement", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string project_need_statement
		{
			get
			{
				return this._project_need_statement;
			}
			set
			{
				if ((this._project_need_statement != value))
				{
					this.Onproject_need_statementChanging(value);
					this.SendPropertyChanging();
					this._project_need_statement = value;
					this.SendPropertyChanged("project_need_statement");
					this.Onproject_need_statementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_objectives", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string project_objectives
		{
			get
			{
				return this._project_objectives;
			}
			set
			{
				if ((this._project_objectives != value))
				{
					this.Onproject_objectivesChanging(value);
					this.SendPropertyChanging();
					this._project_objectives = value;
					this.SendPropertyChanged("project_objectives");
					this.Onproject_objectivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_evaluation_plan", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string project_evaluation_plan
		{
			get
			{
				return this._project_evaluation_plan;
			}
			set
			{
				if ((this._project_evaluation_plan != value))
				{
					this.Onproject_evaluation_planChanging(value);
					this.SendPropertyChanging();
					this._project_evaluation_plan = value;
					this.SendPropertyChanged("project_evaluation_plan");
					this.Onproject_evaluation_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organizational_budget", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string organizational_budget
		{
			get
			{
				return this._organizational_budget;
			}
			set
			{
				if ((this._organizational_budget != value))
				{
					this.Onorganizational_budgetChanging(value);
					this.SendPropertyChanging();
					this._organizational_budget = value;
					this.SendPropertyChanged("organizational_budget");
					this.Onorganizational_budgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_timeline", DbType="NVarChar(MAX)")]
		public string project_timeline
		{
			get
			{
				return this._project_timeline;
			}
			set
			{
				if ((this._project_timeline != value))
				{
					this.Onproject_timelineChanging(value);
					this.SendPropertyChanging();
					this._project_timeline = value;
					this.SendPropertyChanged("project_timeline");
					this.Onproject_timelineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_letters_support", DbType="NVarChar(MAX)")]
		public string project_letters_support
		{
			get
			{
				return this._project_letters_support;
			}
			set
			{
				if ((this._project_letters_support != value))
				{
					this.Onproject_letters_supportChanging(value);
					this.SendPropertyChanging();
					this._project_letters_support = value;
					this.SendPropertyChanged("project_letters_support");
					this.Onproject_letters_supportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_grant_project", Storage="_grant_projects", ThisKey="project_id", OtherKey="project_id")]
		public EntitySet<grant_project> grant_projects
		{
			get
			{
				return this._grant_projects;
			}
			set
			{
				this._grant_projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grant_projects(grant_project entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_grant_projects(grant_project entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.state")]
	public partial class state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _state_id;
		
		private string _state_name;
		
		private EntitySet<grantor> _grantors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstate_idChanging(string value);
    partial void Onstate_idChanged();
    partial void Onstate_nameChanging(string value);
    partial void Onstate_nameChanged();
    #endregion
		
		public state()
		{
			this._grantors = new EntitySet<grantor>(new Action<grantor>(this.attach_grantors), new Action<grantor>(this.detach_grantors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string state_name
		{
			get
			{
				return this._state_name;
			}
			set
			{
				if ((this._state_name != value))
				{
					this.Onstate_nameChanging(value);
					this.SendPropertyChanging();
					this._state_name = value;
					this.SendPropertyChanged("state_name");
					this.Onstate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_grantor", Storage="_grantors", ThisKey="state_id", OtherKey="state_id")]
		public EntitySet<grantor> grantors
		{
			get
			{
				return this._grantors;
			}
			set
			{
				this._grantors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grantors(grantor entity)
		{
			this.SendPropertyChanging();
			entity.state = this;
		}
		
		private void detach_grantors(grantor entity)
		{
			this.SendPropertyChanging();
			entity.state = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.status_type")]
	public partial class status_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _status_id;
		
		private string _description;
		
		private EntitySet<grant> _grants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstatus_idChanging(int value);
    partial void Onstatus_idChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public status_type()
		{
			this._grants = new EntitySet<grant>(new Action<grant>(this.attach_grants), new Action<grant>(this.detach_grants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_type_grant", Storage="_grants", ThisKey="status_id", OtherKey="status")]
		public EntitySet<grant> grants
		{
			get
			{
				return this._grants;
			}
			set
			{
				this._grants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grants(grant entity)
		{
			this.SendPropertyChanging();
			entity.status_type = this;
		}
		
		private void detach_grants(grant entity)
		{
			this.SendPropertyChanging();
			entity.status_type = null;
		}
	}
}
#pragma warning restore 1591
